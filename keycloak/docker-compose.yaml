services:
  postgres:
    image: postgres:16.2
    container_name: Keycloak_postgres
    volumes:
      - /srv/docker-data/keycloak_postgres/datapostgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - keycloak_internal

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    container_name: keycloak
    command: start
    environment:
      - KC_HOSTNAME=auth.chaosag.website
      - KC_HOSTNAME_STRICT_BACKCHANNEL=false
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HEALTH_ENABLED=true
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=Keycloak_postgres
      - KC_DB_URL=jdbc:postgresql://Keycloak_postgres/${POSTGRES_DB}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
      - KC_PROXY=edge
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - Keycloak_postgres
    networks:
      - keycloak_internal
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak-secure.tls=true"
      - "traefik.http.routers.keycloak-secure.entrypoints=https"
      - "traefik.http.routers.keycloak-secure.rule=Host(`auth.chaosag.website`)"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.docker.network=proxy"

networks:
  keycloak_internal:
    external: false
  proxy:
    external: true

